{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["random","min","max","Math","floor","data1","data2","data3","i","push","Dashboard","props","loading","className","toggle","bind","onRadioBtnClick","state","dropdownOpen","radioSelected","this","setState","Component"],"mappings":"gNA2BA,SAASA,EAAOC,EAAKC,GACnB,OAAOC,KAAKC,MAAMD,KAAKH,UAAYE,EAAMD,EAAM,GAAKA,GAQtD,IALA,IACII,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GAEHC,EAAI,EAAGA,GALD,GAKgBA,IAC7BH,EAAMI,KAAKT,EAAO,GAAI,MACtBM,EAAMG,KAAKT,EAAO,GAAI,MACtBO,EAAME,KAAK,I,IAIPC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRC,QAAU,kBAAM,yBAAKC,UAAU,oCAAf,eArBd,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAEvB,EAAKE,MAAQ,CACXC,cAAc,EACdC,cAAe,GARA,E,sEAajBC,KAAKC,SAAS,CACZH,cAAeE,KAAKH,MAAMC,iB,sCAIdC,GACdC,KAAKC,SAAS,CACZF,cAAeA,M,+BAQjB,OACE,yBAAKN,UAAU,wB,GA9BGS,aAqCTZ","file":"static/js/11.7343856d.chunk.js","sourcesContent":["import React, { Component } from 'react'; // lazy, Suspense \n// import { Bar, Line } from 'react-chartjs-2';\n// import {\n//   Badge,\n//   Button,\n//   ButtonDropdown,\n//   ButtonGroup,\n//   ButtonToolbar,\n//   Card,\n//   CardBody,\n//   CardFooter,\n//   CardHeader,\n//   CardTitle,\n//   Col,\n//   Dropdown,\n//   DropdownItem,\n//   DropdownMenu,\n//   DropdownToggle,\n//   Progress,\n//   Row,\n//   Table,\n// } from 'reactstrap';\n// import { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities'\n\n// Main Chart\n\n//Random Numbers\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar elements = 27;\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (var i = 0; i <= elements; i++) {\n  data1.push(random(50, 200));\n  data2.push(random(80, 100));\n  data3.push(65);\n}\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}